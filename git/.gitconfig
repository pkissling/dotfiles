[alias]
  # abbreviations
  a = add
  aa = add -A
  ap = add -p
  c = commit
  ca = commit --all
  cane = commit --amend --no-edit
  cam = commit --all --message
  fc = fuzzy-checkout
  frb = fuzzy-rebase
  cl = clean --force -d
  co = checkout
  cob = checkout -b
  cm = commit --message
  d = diff
  ds = diff --staged
  fd = fuzzy-diff
  hist = log --pretty=format:'%C(dim blue)[%ad]%C(reset) %C(bold normal)[%h]%C(reset) | %C(blue)%s %C(bold normal)[%an]%C(reset)%C(bold white)%d%C(reset)' --graph --date=short
  last = log -1 HEAD --stat
  m = master
  p = push
  pfwl = push --force-with-lease
  pl = pull-rebase
  psu = push-set-upstream
  r = reset
  rb = rebase
  rbc = rebase --continue
  rbm = rebase-master
  rbi = rebase-interactive
  rh = reset --hard
  rs = reset --soft
  s = status
  ss = status --short --branch

  # aliases
  cleanup = "!git fetch --prune --tags --force > /dev/null && for BRANCH in `git branch -vv | grep --invert-match '^*' | grep ': gone' | awk '{print $1}'`; do git branch -D ${BRANCH}; done"
  pull-rebase = "!git fetch --prune --tags --force && git pull origin $(git symbolic-ref --short HEAD) --rebase --autostash"
  rebase-master = "!git fetch --prune --tags --force && git rebase --autostash origin/$(git remote show origin | grep HEAD | sed 's/.* //')"
  rebase-interactive = "!git rebase --autostash --interactive $(git log -n 1 origin/$(git remote show origin | grep HEAD | sed 's/.* //') --pretty=format:'%h')"
  master = "!git checkout $(git remote show origin | grep HEAD | sed 's/.* //') && git pl && git cleanup"
  push-set-upstream = "!git push --set-upstream origin $(git symbolic-ref --short HEAD)"

  # functions
  fuzzy-checkout = !bash -c 'source $HOME/.git/bin && git-fuzzy-checkout'
  fuzzy-rebase = !bash -c 'source $HOME/.git/bin && git-fuzzy-rebase'
  fuzzy-diff = !bash -c 'source $HOME/.git/bin && git-fuzzy-diff'

[core]
  pager = delta --dark
  excludesfile = ~/.git/.gitignore_global

[credential]
  helper = /usr/local/share/gcm-core/git-credential-manager-core

[credential "https://dev.azure.com"]
  useHttpPath = true

[delta]
  features = side-by-side line-numbers

[diff]
  colorMoved = default
  guitool = idea
  tool = idea

[difftool "idea"]
  cmd = idea diff \
    \"$(cd \"$(dirname \"$LOCAL\")\" && pwd)/$(basename \"$LOCAL\")\" \
    \"$(cd \"$(dirname \"$REMOTE\")\" && pwd)/$(basename \"$REMOTE\")\" \

[gpg]
  program = /usr/local/bin/gpg

[interactive]
  diffFilter = delta --color-only --dark

[merge]
  tool = idea
  guitool = idea

[mergetool]
  keepBackup = false

[mergetool "idea"]
  cmd = idea merge \
    \"$(cd \"$(dirname \"$LOCAL\")\" && pwd)/$(basename \"$LOCAL\")\" \
    \"$(cd \"$(dirname \"$REMOTE\")\" && pwd)/$(basename \"$REMOTE\")\" \
    \"$(cd \"$(dirname \"$BASE\")\" && pwd)/$(basename \"$BASE\")\" \
    \"$(cd \"$(dirname \"$MERGED\")\" && pwd)/$(basename \"$MERGED\")\" \
  trustExitCode = true

[pull]
  rebase = true

[rebase]
  autoStash = true

[user]
  # default user config, unless overwritten via [include]
  # workaround to have basic gitconfig avialable in .devcontainer.json
  name = Patrick Kissling
  email = patrick.kissling@gmx.de

[include]
  # user details
  path = ~/.git/.gitconfig_user
